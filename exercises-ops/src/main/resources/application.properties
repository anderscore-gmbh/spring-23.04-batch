# Spring-Batch database connection
spring.datasource.url=jdbc:hsqldb:hsql://localhost:9001/xdb;sql.enforce_strict_size=true;hsqldb.tx=mvcc
spring.datasource.username=SA
spring.datasource.password=

# Run the hello job every 5 minutes, starting at 0:03
ops.hello.schedule.cron = 0 3/5 * * * ?

# Logging configuration keeps up to 5 logfiles with a up to 10 mb for each.
logging.file.path=target
logging.logback.rollingpolicy.max-history=5

# Show all debug messages of this project
logging.level.ops=debug

# Log all SQL statements: debug
logging.level.org.springframework.jdbc.core=info

# Spring batch specific settings:
# Create the schema if it is not there
spring.batch.jdbc.initialize-schema=always

# Do not run the job immediately after starting the application
spring.batch.job.enabled=false

# The port used to run the web-ui (defaults to 8080)
# server.port=8080

# Quartz
# tag::quartz[]
spring.quartz.job-store-type=jdbc
spring.quartz.jdbc.initialize-schema=always

ops.quartz.cron = 0 0/5 * * * ?
# end::quartz[]

# tag::actuator[]
# Expose all actuator endpoints (niemals in der Produktion!)
management.endpoints.web.exposure.include=*
# end::actuator[]

# Micrometer: Prometheus
# tag::prometheus[]
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
# end::prometheus[]
